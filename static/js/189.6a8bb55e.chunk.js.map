{"version":3,"file":"static/js/189.6a8bb55e.chunk.js","mappings":"2NACA,EAAuB,mB,kBCKjBA,GAAeC,EAAAA,EAAAA,OAAK,kBAAK,4BAAL,IA8B1B,EA5Ba,WAET,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAUC,EAAAA,EAAAA,MAAYC,GAM5B,OAJAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAcJ,GAASK,MAAK,SAAAC,GAAG,OAAIP,EAAQO,EAAIR,KAAKS,MAAM,EAAE,GAA7B,IAAkCC,OAAM,kBAAMC,MAAM,yBAAZ,GAC1E,GAAC,CAACT,KAGC,eAAIU,UAAYC,EAAhB,UACE,SAAC,EAAAC,SAAD,CAAUC,UAAa,SAACC,EAAA,EAAD,IAAvB,SACIhB,EAAKiB,OAAS,EACdjB,EAAKkB,KAAI,SAACC,GAAY,OAAO,yBAC3B,SAACtB,EAAD,CACIuB,QAAYD,EAAQE,cAChBC,EAAAA,EAAAA,IAAYH,EAAQE,aAAc,KAClC,8EACJE,SAAaJ,EAAQK,KACrBC,cAAkBN,EAAQO,aANOP,EAAQf,GAQ3C,KACN,uDAIX,C,+OChCKuB,EAAS,mCAER,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACSC,EAAAA,EAAAA,IAAA,kEAAqEF,IAAUpB,MAAK,SAAAuB,GAAM,OAAIA,EAAOC,KAAKC,OAAhB,IADnG,0GAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,iFACSL,EAAAA,EAAAA,IAAA,4DAA+DF,EAA/D,iCAA8FO,EAA9F,gCAAqI3B,MAAK,SAAAuB,GAAM,OAAIA,EAAOC,KAAKC,OAAhB,IADzJ,0GAIA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,iFACSP,EAAAA,EAAAA,IAAA,6CAAgDO,EAAhD,oBAAkET,EAAlE,oBAA2FpB,MAAK,SAAAuB,GAAM,OAAIA,EAAOC,IAAX,IAD/G,0GAIA,SAAST,EAAYe,EAASC,GAClC,MAAM,+BAAN,OAAsCA,EAAtC,YAAiDD,EACnD,CAEM,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFAEkBX,EAAAA,EAAAA,IAAA,gEAAmEF,EAAnE,oBACrBpB,MAAK,SAAAC,GAAG,OAAGA,EAAIuB,KAAKU,MAAZ,IAHL,cAEEC,EAFF,yBAKGA,EAAQC,QAAQ,SAACC,EAAKzB,GAE1B,OADIqB,EAAUK,SAAS1B,EAAQf,KAAMwC,EAAIE,KAAK3B,EAAQK,MAC/CoB,CACT,GAAE,KARC,kEAWA,SAAetC,EAAtB,+CAAO,OAAP,oBAAO,WAA6B8B,GAA7B,iFACSP,EAAAA,EAAAA,IAAA,6CAAgDO,EAAhD,4BAA0ET,EAA1E,oBAAmGpB,MAAK,SAAAuB,GAAM,OAAIA,EAAOC,IAAX,IADvH,0GAIA,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCX,GAAhC,iFACSP,EAAAA,EAAAA,IAAA,6CAAgDO,EAAhD,4BAA0ET,EAA1E,2BAA0GpB,MAAK,SAAAuB,GAAM,OAAIA,EAAOC,IAAX,IAD9H,0G","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/cast.module.scss?8bbe","components/Cast/Cast.jsx","components/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"cast_list__x5fro\"};","import { getMovieCast, getImageUrl } from \"components/moviesApi\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState, lazy, Suspense } from \"react\";\nimport scss from './cast.module.scss'\nimport Loader from \"components/Loader/Loader\";\n\nconst LazyCastCard = lazy(()=> import (\"./CastCard/CastCard\") );\n\nconst Cast = () => {\n\n    const [cast, setCast] = useState([]);\n    const movieId = useParams().id;\n\n    useEffect(()=>{\n        getMovieCast (movieId).then(res => setCast(res.cast.slice(0,5))).catch(() => alert('Some problems with API'));\n    },[movieId]);\n    \n    return (\n        <ul className={ scss.list }>\n          <Suspense fallback = { <Loader/> }>\n            { cast.length > 0 ?\n              cast.map((element)=>{ return <li key={ element.id }>               \n                <LazyCastCard \n                    castImg = { element.profile_path ? \n                        getImageUrl(element.profile_path, 300) : \n                        'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder' }\n                    castName = { element.name }\n                    castCharacter = { element.character}\n                />\n            </li>}) : \n            <li>There are no cast info.</li> }    \n           </Suspense>         \n        </ul>\n    )\n};\n\nexport default Cast;","import axios from \"axios\";\n\nconst apiKey = '0bf9a11da9d083f4751315d07dcbd89b';\n\nexport async function trendingMovies () {\n   return await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`).then(result => result.data.results);\n};\n\nexport async function getMoviesByName (filmName) {\n   return await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${filmName}&page=1&include_adult=false`).then(result => result.data.results);\n};\n\nexport async function getMovieInfo (filmid) {\n   return await axios.get(`https://api.themoviedb.org/3/movie/${filmid}?api_key=${apiKey}&language=en-US`).then(result => result.data);\n};\n\nexport function getImageUrl(imgName, imgSize) {\n   return `https://image.tmdb.org/t/p/w${imgSize}/${imgName}`;\n};\n\nexport async function getGenresList(genresIds) {\n   \n   const request = await axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}&language=en-US`)\n   .then(res=> res.data.genres);\n\n   return request.reduce ((acc, element) => {\n      if (genresIds.includes(element.id)){ acc.push(element.name) }     \n      return acc;\n   }, []); \n};\n\nexport async function getMovieCast (filmid) {\n   return await axios.get(`https://api.themoviedb.org/3/movie/${filmid}/credits?api_key=${apiKey}&language=en-US`).then(result => result.data);\n};\n\nexport async function getMovieReviews (filmid) {\n   return await axios.get(`https://api.themoviedb.org/3/movie/${filmid}/reviews?api_key=${apiKey}&language=en-US&page=1`).then(result => result.data);\n};"],"names":["LazyCastCard","lazy","useState","cast","setCast","movieId","useParams","id","useEffect","getMovieCast","then","res","slice","catch","alert","className","scss","Suspense","fallback","Loader","length","map","element","castImg","profile_path","getImageUrl","castName","name","castCharacter","character","apiKey","trendingMovies","axios","result","data","results","getMoviesByName","filmName","getMovieInfo","filmid","imgName","imgSize","getGenresList","genresIds","genres","request","reduce","acc","includes","push","getMovieReviews"],"sourceRoot":""}